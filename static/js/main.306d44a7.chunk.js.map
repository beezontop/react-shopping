{"version":3,"sources":["components/header.jsx","components/navber.jsx","components/product.jsx","components/cart.jsx","components/addtocart.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","className","Navbar","Product","props","data","item","Fragment","src","image","alt","title","price","Cart","useState","show","setShow","handleClose","Button","variant","onClick","width","height","viewBox","fill","xmlns","fillRule","d","cartCount","length","key","id","Modal","onHide","closeButton","Title","Body","map","i","Row","Col","xs","e","doDelete","currentTarget","sum","ButtonGroup","size","doAdd","count","doMinus","total","showItem","Footer","AddtoCart","App","error","setError","isLoaded","setIsloaded","setData","setTotal","cartList","setCartList","useEffect","fetch","then","res","json","handleAddtoCart","target","filter","find","newItem","newCartList","push","newTotal","toFixed","message","dec","Spinner","animation","role","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.306d44a7.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../css/header.css';\r\n\r\nconst Header = () => {\r\n    \r\n    return ( <header>\r\n        <h1 className=\"full-width\">\r\n           <span className=\"color-red\">DOMA</span><span className=\"color-black\">ZON</span>\r\n        </h1>\r\n    </header> );\r\n}\r\n \r\nexport default Header;","import React from \"react\";\r\nimport \"../css/nav.css\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav>\r\n      <div className=\"container\">New Arrivals &#62;</div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"../css/product.css\";\r\n\r\nconst Product = (props) => {\r\n  const { data } = props;\r\n\r\n  const item = (\r\n    <React.Fragment>\r\n      <img src={data.image} alt=\"product-img\" />\r\n\r\n      <p  className=\"pd-title\">{data.title}</p>\r\n      <p className=\"pd-price\">\r\n        <span className=\"dollar-sign\">$</span>\r\n        <span className=\"price\">{data.price}</span>\r\n      </p>\r\n    </React.Fragment>\r\n  );\r\n\r\n  return <React.Fragment>{item}</React.Fragment>;\r\n};\r\n\r\nexport default Product;\r\n","import React, { useState } from \"react\";\r\nimport { ButtonGroup, Button, Modal, Row, Col } from \"react-bootstrap\";\r\nimport \"../css/cart.css\";\r\n\r\nconst Cart = (props) => {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const showItem = (length) => {\r\n    \r\n    const item = props.cartCount.map((i) => (\r\n      <Row key={i.id}>\r\n        <Col xs={12}>\r\n          <div key={i.id}>\r\n            <div className=\"cart-item\">\r\n              <div className=\"clearfix\">\r\n                <button\r\n                  onClick={(e) => props.doDelete(e.currentTarget)}\r\n                  id={i.id}\r\n                  className=\"close-btn float-right\"\r\n                >\r\n                  <svg\r\n                    width=\"1em\"\r\n                    height=\"1em\"\r\n                    viewBox=\"0 0 16 16\"\r\n                    className=\"bi bi-x-circle\"\r\n                    fill=\"currentColor\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path\r\n                      fillRule=\"evenodd\"\r\n                      d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"\r\n                    />\r\n                    <path\r\n                      fillRule=\"evenodd\"\r\n                      d=\"M11.854 4.146a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708-.708l7-7a.5.5 0 0 1 .708 0z\"\r\n                    />\r\n                    <path\r\n                      fillRule=\"evenodd\"\r\n                      d=\"M4.146 4.146a.5.5 0 0 0 0 .708l7 7a.5.5 0 0 0 .708-.708l-7-7a.5.5 0 0 0-.708 0z\"\r\n                    />\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                  <img src={i.data.image} alt=\"product-pic\" />\r\n                  <p>{i.data.title}</p>\r\n                  <p>\r\n                    <span className=\"dollar-sign\">$</span>\r\n                    <span className=\"price\">{i.data.price}</span>\r\n                  </p>\r\n                </div>\r\n                <div className=\"col-6 d-flex flex-column align-self-center\">\r\n                  <div className=\"price-sum\">\r\n                    <span className=\"dollar-sign\">$</span>\r\n                    {i.sum}\r\n                  </div>\r\n                  <ButtonGroup size=\"sm\">\r\n                    <Button className=\"btn-add\" onClick={props.doAdd} id={i.id}>\r\n                      <svg\r\n                        width=\"1em\"\r\n                        height=\"1em\"\r\n                        viewBox=\"0 0 16 16\"\r\n                        className=\"bi bi-plus\"\r\n                        fill=\"currentColor\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          fillRule=\"evenodd\"\r\n                          d=\"M8 3.5a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5H4a.5.5 0 0 1 0-1h3.5V4a.5.5 0 0 1 .5-.5z\"\r\n                        />\r\n                        <path\r\n                          fillRule=\"evenodd\"\r\n                          d=\"M7.5 8a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1H8.5V12a.5.5 0 0 1-1 0V8z\"\r\n                        />\r\n                      </svg>\r\n                    </Button>\r\n                    <span className=\"count-span\">{i.count}</span>\r\n                    <Button\r\n                      className=\"btn-minus\"\r\n                      onClick={props.doMinus}\r\n                      id={i.id}\r\n                    >\r\n                      <svg\r\n                        width=\"1em\"\r\n                        height=\"1em\"\r\n                        viewBox=\"0 0 16 16\"\r\n                        className=\"bi bi-dash \"\r\n                        fill=\"currentColor\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          fillRule=\"evenodd\"\r\n                          d=\"M3.5 8a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 0 1H4a.5.5 0 0 1-.5-.5z\"\r\n                        />\r\n                      </svg>\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    ));\r\n    const total = (\r\n      <div className=\"total-price d-flex align-self-center justify-content-end\" key={props.total}>\r\n        <span className=\"total-title\">Total:</span>\r\n        <span className=\"price total-price\">{props.total}</span>\r\n      </div>\r\n    );\r\n    const emptyMsg = <span className=\"empty-msg\">Your cart is empty.</span>;\r\n    if (length > 0) {\r\n      return [item, total];\r\n    } else {\r\n      return emptyMsg;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Button\r\n        variant=\"primary\"\r\n        onClick={handleShow}\r\n        className=\"cart-btn black-btn float-right\"\r\n      >\r\n        <svg\r\n          width=\"1em\"\r\n          height=\"1em\"\r\n          viewBox=\"0 0 16 16\"\r\n          className=\"bi bi-cart4\"\r\n          fill=\"currentColor\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            fillRule=\"evenodd\"\r\n            d=\"M0 2.5A.5.5 0 0 1 .5 2H2a.5.5 0 0 1 .485.379L2.89 4H14.5a.5.5 0 0 1 .485.621l-1.5 6A.5.5 0 0 1 13 11H4a.5.5 0 0 1-.485-.379L1.61 3H.5a.5.5 0 0 1-.5-.5zM3.14 5l.5 2H5V5H3.14zM6 5v2h2V5H6zm3 0v2h2V5H9zm3 0v2h1.36l.5-2H12zm1.11 3H12v2h.61l.5-2zM11 8H9v2h2V8zM8 8H6v2h2V8zM5 8H3.89l.5 2H5V8zm0 5a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0zm9-1a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0z\"\r\n          />\r\n        </svg>\r\n\r\n        <span className=\"m-2\">{props.cartCount.length}</span>\r\n      </Button>\r\n\r\n      <div className=\"clearfix\" key={props.id}>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Shopping Cart</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>{showItem(props.cartCount.length)}</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={handleClose}>\r\n              Proceed to checkout\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default Cart;\r\n","import React from \"react\";\r\nimport { ButtonGroup, Button } from \"react-bootstrap\";\r\n\r\nconst AddtoCart = (props) => {\r\n  return (\r\n    <div className=\"addCart-btn\" key={props.id}>\r\n      <ButtonGroup size=\"sm\">\r\n        <Button onClick={props.onClick} id={props.id} className=\"black-btn\">\r\n          Add to cart\r\n        </Button>\r\n      </ButtonGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddtoCart;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./css/App.css\";\nimport Header from \"./components/header\";\nimport Navbar from \"./components/navber\";\nimport Product from \"./components/product\";\nimport Cart from \"./components/cart\";\nimport AddtoCart from \"./components/addtocart\";\nimport { Spinner } from \"react-bootstrap\";\n\nfunction App() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsloaded] = useState(false);\n  const [data, setData] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [cartList, setCartList] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://fakestoreapi.com/products\")\n      .then((res) => res.json())\n      .then(\n        (data) => {\n          setIsloaded(true);\n          setData(data);\n        },\n        (error) => {\n          setIsloaded(true);\n          setError(error);\n        }\n      );\n  }, []);\n\n  const handleAddtoCart = (e) => {\n    //取得data中與e相符的目標\n    const target = data.filter((i) => i.id === +e.currentTarget.id);\n    //取得cartList中與e相符的目標\n    const cartTarget = cartList.find((i) => i.id === +e.currentTarget.id);\n\n    //若不存在於cartList\n    if (!cartTarget) {\n      // 生成newitem\n      const newItem = {\n        id: +e.currentTarget.id,\n        count: 1,\n        data: target[0],\n        sum: target[0].price,\n      };\n      //把newItem存到cartList\n      const newCartList = [...cartList];\n      newCartList.push(newItem);\n      setCartList(newCartList);\n\n      //////////////[total]]///////////////////\n\n      //將 newItem 價格加至 total\n      let newTotal = total + newItem.sum;\n      newTotal = newTotal.toFixed(2);\n      setTotal(+newTotal);\n    }\n  };\n\n  const handleAdd = (e) => {\n    //複製cartList\n    let newCartList = [...cartList];\n    //找到目標 並count++ , 總價格加上單價\n    const target = newCartList.find((i) => i.id === +e.currentTarget.id);\n    target.count++;\n    target.sum += target.data.price;\n    let dec = target.sum;\n    target.sum = +dec.toFixed(2);\n    setCartList(newCartList);\n\n    //////////////[total]]///////////////////\n\n    let newTotal = total + target.data.price;\n    newTotal = newTotal.toFixed(2);\n    setTotal(+newTotal);\n  };\n\n  const handleMinus = (e) => {\n    //複製cartList\n    let newCartList = [...cartList];\n    //找到目標 並count++, 總價格減掉單價\n    const target = newCartList.find((i) => i.id === +e.currentTarget.id);\n    if (target.count > 1) {\n      target.count--;\n      target.sum -= target.data.price;\n      let dec = target.sum;\n      target.sum = +dec.toFixed(2);\n\n      //////////////[total]]///////////////////\n      let newTotal = total - target.data.price;\n      if (newTotal < 0) {\n        newTotal = 0;\n        setTotal(newTotal);\n      } else {\n        newTotal = newTotal.toFixed(2);\n        setTotal(+newTotal);\n      }\n    }\n    setCartList(newCartList);\n  };\n\n  function handleDelete(e) {\n    const id = +e.id;\n    //將目標篩掉\n    const newCartList = cartList.filter((i) => i.id !== id);\n    setCartList(newCartList);\n    //將目標的值從total減掉\n    const target = cartList.filter((i) => i.id === id);\n    let newTotal = total - target[0].sum;\n    newTotal = newTotal.toFixed(2);\n    setTotal(+newTotal);\n  }\n\n  const item = data.map((i) => {\n    return (\n      <li className=\"col-xs-12 col-sm-6 col-md-4 col-lg-3\" key={i.id}>\n        <div className=\"product-info\" key={i.id}>\n          <Product data={i} />\n          <AddtoCart onClick={handleAddtoCart} id={i.id} />\n        </div>\n      </li>\n    );\n  });\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return (\n      <Spinner\n        animation=\"border\"\n        role=\"status\"\n        variant=\"warning\"\n        className=\"loading\"\n      >\n        <span className=\"sr-only\">Loading...</span>\n      </Spinner>\n    );\n  } else {\n    return (\n      <React.Fragment>\n        <Header />\n        <Navbar />\n        <div className=\"container\">\n          <Cart\n            data={data}\n            cartCount={cartList}\n            doAdd={handleAdd}\n            doMinus={handleMinus}\n            total={total}\n            doDelete={handleDelete}\n          />\n          <ul className=\"product-list row\" key={data.id}>\n            {item}\n          </ul>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}